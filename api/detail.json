{
  "success": true,
  "data": {
    "title": "通俗易懂说链表",
    "content": "<div id='cnblogs_post_body' class='blogpost-body'><h2><strong>一：概述</strong></h2>\n<p>链表（Linked list）由一些节点组成，物理存储非连续的<strong>线性表</strong>。其中每个节点都会存储下个节点的指针，由于实际<strong>存储空间不连续</strong>，对链表插入节点，删除节点可以达到<strong>O(1)的复杂度</strong>，但是对一个节点的访问需要O(n)的时间。</p>\n<p>链表有单向链表，双向链表。</p>\n<p>&nbsp;</p>\n<h2><strong>二：单向链表</strong></h2>\n<p>单向链表的每个节点有数据项和指针(指向下个节点地址数据)组成，下图为一个单向链表，表头没有数据项，只有指向下一个节点的指针。表尾节点指向下一个节点pNext指针为NULL（空）。</p>\n<p>结构体表示为：</p>\n<pre><code class='hljs cpp'><span class='hljs-comment'><span class='hljs-comment'>//单向链表节点数据结构</span><br><span class='hljs-keyword'><span class='hljs-comment'>typedef&nbsp;</span><span class='hljs-class'><span class='hljs-keyword'><span class='hljs-comment'>struct&nbsp;</span><span class='hljs-title'><span class='hljs-comment'>linkNode</span><br><span class='hljs-comment'>{</span><br><span class='hljs-comment'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='hljs-keyword'><span class='hljs-comment'>void&nbsp;*val;&nbsp;</span><span class='hljs-comment'><span class='hljs-comment'>//数据项(任意类型)</span><br><span class='hljs-comment'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='hljs-class'><span class='hljs-keyword'><span class='hljs-comment'>struct&nbsp;</span><span class='hljs-title'><span class='hljs-comment'>linkNode *</span><span class='hljs-title'><span class='hljs-comment'>next;</span><br><span class='hljs-comment'>}node;</span><br></span></span></span></span></span></span></span></span></span></span></span></code></pre>\n<p>&nbsp;</p>\n<p><img class='rich_pages' src='https://notecdn.yiban.io/cloud_res_dev/112289375/imgs/19-4-3_09:38:28.232_44188.png' alt='' width='841' height='155'></p>\n<p><strong>插入节点操作：</strong></p>\n<p>单向链表中由四个数据节点，数据1，数据2，数据3，数据4，现在数据1和数据2节点间插入数据5，只需把数据1节点的pNext指向新的节点，把新节点的pNext指向数据2节点即可。</p>\n<p><img class='rich_pages' src='https://notecdn.yiban.io/cloud_res_dev/112289375/imgs/19-4-3_09:38:28.269_93860.png' alt='' width='841' height='186'></p>\n<p><strong>删除节点操作：</strong></p>\n<p>删除节点2，只需把第一个节点的pNext执行数据3节点，同时释放节点2的存储空间即可。</p>\n<p><img class='rich_pages' src='https://notecdn.yiban.io/cloud_res_dev/112289375/imgs/19-4-3_09:38:28.239_12270.png' alt='' width='845' height='177'></p>\n<p>&nbsp;</p>\n<h2><strong>三：双向链表</strong></h2>\n<p>双向链表有别于单向的，每个节点除了数据项外有两个指针分别指向前一个节点和后一个节点，占用空间会大一些，可以实现从头到尾的遍历，又可以从尾到头遍历。</p>\n<p>结构体表示为：</p>\n<pre><code class='hljs cpp'><span class='hljs-comment'><span class='hljs-comment'>//双向链表节点数据结构</span><br><span class='hljs-keyword'><span class='hljs-comment'>typedef&nbsp;</span><span class='hljs-class'><span class='hljs-keyword'><span class='hljs-comment'>struct&nbsp;</span><span class='hljs-title'><span class='hljs-comment'>dLinkNode</span><br><span class='hljs-comment'>{</span><br><span class='hljs-comment'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='hljs-keyword'><span class='hljs-comment'>void&nbsp;*val;&nbsp;</span><span class='hljs-comment'><span class='hljs-comment'>//数据项(任意类型)</span><br><span class='hljs-comment'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='hljs-class'><span class='hljs-keyword'><span class='hljs-comment'>struct&nbsp;</span><span class='hljs-title'><span class='hljs-comment'>dLinkNode&nbsp;*</span><span class='hljs-title'><span class='hljs-comment'>prev;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br><span class='hljs-comment'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class='hljs-class'><span class='hljs-keyword'><span class='hljs-comment'>struct&nbsp;</span><span class='hljs-title'><span class='hljs-comment'>dLinkNode&nbsp;*</span><span class='hljs-title'><span class='hljs-comment'>next;</span><br><span class='hljs-comment'>}node;</span><br></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>\n<p>&nbsp;</p>\n<p><img class='rich_pages' src='https://notecdn.yiban.io/cloud_res_dev/112289375/imgs/19-4-3_09:38:28.263_5753.png' alt='' width='840' height='161'></p>\n<p><strong>插入节点操作：</strong></p>\n<p>节点1与节点2之间插入新节点5，需要把节点1的pNext指向节点5，节点5的pHead指向节点1，节点5的pNext指向节点2，节点2的pHead指向节点5，如下图所示：</p>\n<p><img class='rich_pages' src='https://notecdn.yiban.io/cloud_res_dev/112289375/imgs/19-4-3_09:38:28.264_826.png' alt='' width='851' height='193'></p>\n<p>&nbsp;</p>\n<p><strong>删除节点操作：</strong></p>\n<p>删除节点2，把节点1的pNext指向节点3，把节点3的pHead指向节点1，同时释放节点2的存储空间即可。</p>\n<p><img class='rich_pages' src='https://notecdn.yiban.io/cloud_res_dev/112289375/imgs/19-4-3_09:38:28.236_87042.jpeg' alt='' width='867' height='195'></p>\n<p>&nbsp;</p>\n<p><strong>四：链表与数组区别</strong></p>\n<p>1.链表存储空间不连续，可以充分利用碎片空间，数组的存储空间是连续的，内存空间要求高，必须要有足够连续的内存空间。</p>\n<p>2.链表的插入删除元素简单，无需对元素移动，但查询元素会慢，数组对元素的插入删除较复杂，同时使用时要预先指定长度，但数组的查询会很快。</p>\n<p>&nbsp;</p></div>"
  }
}
